name: Compile

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-10.15, windows-2019]
        include:
          - platform: 'macos-10.15'
            vcpkg_triplet: 'x64-osx'
            cmake_extra: ''
            zip_command: 'zip metier.zip metier'
          - platform: 'windows-2019'
            vcpkg_triplet: 'x64-windows-static'
            cmake_extra: ''
            zip_command: '7z a -tzip metier.zip metier.exe'
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
        submodules: 'recursive'
    - name: Install extra dependencies
      if: matrix.platform == 'ubuntu-20.04'
      run: |
          sudo apt-get update
          sudo apt-get install -y autoconf autopoint curl g++ git gperf libgl1-mesa-dev libglu1-mesa-dev libtool libx11-dev libx11-xcb-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-shm0-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxext-dev libxi-dev libxkbcommon-x11-dev libxrender-dev make pkg-config python3 tar unzip zip
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.18.4'
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v5
      with:
        vcpkgArguments: '--triplet ${{ matrix.vcpkg_triplet }} --overlay-ports=${{ github.workspace }}/deps/opentxs/vcpkg/ports  --overlay-triplets=${{ github.workspace }}/deps/opentxs/vcpkg/triplets @${{ github.workspace }}/deps/vcpkg.txt'
        vcpkgDirectory: '${{ github.workspace }}/deps/vcpkg'
    - name: 'Compile'
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        vcpkgTriplet: '${{ matrix.vcpkg_triplet }}'
        buildDirectory: '${{ github.workspace }}/build'
        cmakeAppendedArgs: '-GNinja -DCMAKE_BUILD_TYPE=Debug -DMETIER_PEDANTIC_BUILD=OFF -DMETIER_BUNDLED_OPENTXS=ON -DMETIER_DEFAULT_SYNC_SERVER=${{ secrets.DEFAULT_SYNC_SERVER }}  ${{ matrix.cmake_extra }}'
        buildWithCMake: true
        buildWithCMakeArgs: '-- -k 0'
    - name: 'Package'
      run: |
        cd ${{ github.workspace }}/build
        cd src
        ${{ matrix.zip_command }}
    - uses: actions/upload-artifact@v2
      with:
        name: metier-${{ matrix.platform }}.zip
        path: ${{ github.workspace }}/build/src/metier.zip
